/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.3.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    id 'idea'

    // Apply the application plugin to add support for building an application
    id 'application'

    id 'jacoco'

    id 'checkstyle'
    id "org.springframework.boot" version "2.2.1.RELEASE"
    id "io.freefair.lombok" version "4.1.5"
    id "com.github.spotbugs" version "2.0.1"
    id "org.sonarqube" version "2.8"
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    implementation platform('org.springframework.boot:spring-boot-dependencies:2.1.0.RELEASE')
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.228')
    implementation 'com.amazonaws:aws-java-sdk-dynamodb'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.google.guava:guava:27.0.1-jre'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.10.1'
    implementation 'joda-time:joda-time:2.10.5'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    // Use JUnit test framework
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}
checkstyle {
    toolVersion '7.8.1'
    configFile  rootProject.file('config/checkstyle/checkstyle.xml')
    
}
spotbugs {
    toolVersion = '3.1.12'
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports.xml.enabled = false
    reports.html.enabled = true
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
    }

    test {
        java {
            srcDirs = ['test']
        }
    }
}

test {
    useJUnitPlatform()
}
sonarqube {
    properties {
        property "sonar.projectKey", "ConsortiumApps_sandbox"
        property "sonar.organization", "consortiumapps"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", "8d7a5693d07b0e6e09fb3eedacfb0264edc04fb5"
    }
}

// Define the main class for the application
mainClassName = 'playground.Application'
